<!-- Bread Crumb -->
<ul class="breadcrumb">
  <li><%= link_to "Home", root_path %></li>
  <li>Lessons</li>
  <li><%= link_to "Fundamentals", lesson_fundamental_path%></li>
  <li>Module 2 - Loops</li>
</ul>
<!-- End of Bread Crumb -->


<!-- Title -->
<div class="container gray">
	<div class="center">
		<h1>Loops</h1>
	</div>
</div>
<!-- End of Title -->

<br>
<br>
<br>

<!-- Modules -->
<div class="custom-container">
	<div class="third-lesson-box">
		<div class="white">
		<h2 class='lesson-title white'>Learning Goal</h2>
		<p><span></span>Understand the concept and applications of a loop, and how to use a For loop.</p>
		</div>
	</div>
</div>

<br>
<br>
<br>
<br>
<br>

<!-- Lesson Box -->
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
			<h1 class='lesson-title center gray'>Lesson & Syntax</h1>
			<p>A loop statement allows someone to execute a statement or statements a certain number of times. The syntax is written as follows:<p>
			<p><pre class="image-300" style="margin-left: 20px">for x in range(100):<br />	print “Hello!”</pre></p>
			<p>The code will go that loop 100 times, printing the word Hello! that many times. You can put more information inside the loop and control how many times the code is run inside the loop. Indent each line of code that you would want to loop (see how the code print “Hello!” is indented in the example above). For this module, consider how you would change the code from Module 1 and cause your LED light to blink.</p>
		</div>
	</div>
</div>
<br>
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
			<h1 class='lesson-title center gray'>Learning Opportunity</h1>
			<p>Change the above syntax to:</p>
			<p><pre class="image-300" style="margin-left: 20px">for x in range(5):<br />	print “Hello!”</pre></p>
			<p>Your resule will be:</p>
			<p><pre class="image-300" style="margin-left: 20px">Hello<br />Hello<br />Hello<br />Hello<br />Hello<br /></pre></p>
			<p>This is a loop that will excute as many times as you specify between the parenthese.</p>
		</div>
	</div>
</div>

<br>
<br>
<br>

<!-- Excercises -->
<div class="custom-container gray">
	<h1>Excercises</h1>
</div>


<!-- Excercise 1 -->
<div class="custom-container gray">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 1: Have an LED light five times</h2>
			<p>1. Set up the breadboard the same as Module 1, Exercise 2</p>
		</div>
		<div>
			<div><%= image_tag ("gpio1.png")%></div>
		</div>
		<p>2. Plug in male end of the wires to bread board. Set up LED light and resistor (220 ohms) on bread board.</p>
		<div><div><%= image_tag ("gpio2.png")%></div></div></div>
	</div>
</div>


<br>
<br>

<!-- Exercise 2-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 2: Turn LED light on with GPIO pin 11</h2>
			<p>1. Open the Raspberry Pi&trade; terminal.</p>
			<p>2. Open nano file <code>ex1_2.py</code> by typing <code>sudo nano ex1_2.py</code> in the terminal.</p>
			<p>3. Set up bread board the same way as exercise 1, except move male-to-female wire from GPIO Pin 2 to GPIO Pin 11.</p>
			<div><div><%= image_tag ("gpio3.png")%></div></div>
			<p>4. Read directions in red and complete the exercise. Refer to the Module 1 Lesson & Syntax to know what syntax to use.</p>
			<p>5. Save and exit your nano file by using CTRL+X, then type “y”, and hit enter.</p>
			<p>6. Execute the python code by typing <code>sudo python ex1_2.py</code></p>
			<p>7. Look at the GPIO pin layout diagram. Do you think you can use a different GPIO pin? If you think you can, adjust the wiring and your code and see if you can still turn on the light.</p>
		</div>
	</div>
</div>

<br>
<br>

<!-- Exercise 3-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 3: Toggle one LED light on and one LED light off with different GPIO Pins, using GPIO Pin 11 and GPIO Pin 13.</h2>
			<p>Set up bread board the same way as in Module 1 Exercise 2. Then add another resistor and LED light to the bread board. Then add another male to female wire from GPIO Pin 13 to the second LED light. Note: Have the same ground with the second resistor</p>
			<div><div><%= image_tag ("gpio4.png") %></div></div>
			<p>2. Open nano file <code>ex1_3.py</code></p>
			<p>3. Read directions in red and complete the exercise. Refer to the Module 1 Lesson & Syntax to know what syntax to use.</p>
			<p>4. Save and exit your nano file.</p>
			<p>5. Execute the python code.</p>
			<p>6. Now open nano file <code>ex1_3.py</code> again and change the code such that the second LED light connected to GPIO Pin 13 is on, and the first LED light connected to GPIO Pin 11 is off, and execute your code.</p>
		</div>
	</div>
</div>

<br>
<br>


<br>
<br>


<!-- Excecise 3 -->
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
		<h1 class='lesson-title center gray'>Time to celebrate.</h1>
		<p><i class="fa fa-hand-peace-o" aria-hidden="true"></i> Pat yourself on the back, give a classmate a high five!</p>
		<p><i class="fa fa-hand-paper-o" aria-hidden="true"></i> Check with the instructor you're good to proceed.</p>
		</div>
		<div class="center">
			<%= link_to "< Back to fundamentals", lesson_fundamental_path, class:"btn btn-primary" %>
			<%= link_to "Go to module 2 >", lesson_fundamental_loops_path, class:"btn btn-primary" %>
		</div>
	</div>
</div>

<br>
<br>


