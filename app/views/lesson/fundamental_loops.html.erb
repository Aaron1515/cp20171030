<!-- Pop up image modal template -->
<div class="modal fade" id="enlargeImageModal" tabindex="-1" role="dialog" aria-labelledby="enlargeImageModal" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header" style="border: none;">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
      </div>
      <div class="modal-body">
        <img src="" class="enlargeImageModalSource" style="width: 100%;">
      </div>
    </div>
  </div>
</div>
<!-- End of image pop up modal -->

<!-- Bread Crumb -->
<div class="sticky">
	<ul class="breadcrumb" id="breadcrumb">
	  <li><%= link_to "Home", root_path %></li>
	  <li><%= link_to "Lessons", lesson_index_path %></li>
	  <li><%= link_to "Fundamentals", lesson_fundamental_path%></li>
	  <li>Module 2 - Loops</li>
	</ul>
</div>
<!-- End of Bread Crumb -->


<!-- Title -->
<div class="container gray">
	<div class="center">
		<h1>LOOPS</h1>
	</div>
</div>
<!-- End of Title -->

<br>
<br>
<br>

<!-- Modules -->
<div class="custom-container">
	<div class="third-lesson-box">
		<div class="white">
		<h2 class='lesson-title white'>Learning Goal</h2>
		<p>
			<ul>
				<li>Understand concept of loop and some potential applications for it</li>
				<li>Distinguish between different types of loops (For vs While)</li>
				<li>Learn Python syntax for creating simple loops</li>
				<li>Learn how to use the <span class="code-text">Time.sleep()</span> Python function</li>
				<li>Advanced: learn how to create nested loops</li>
			</ul>
		</p>
		</div>
	</div>
</div>

<br>
<br>
<br>
<br>
<br>

<!-- Lesson Box -->
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
			<h1 class='lesson-title center gray'>Lesson & Syntax</h1>
			<p>A loop statement allows someone to execute a statement or statements a certain number of times. The syntax is written as follows:<p>
			<p><pre class="image-300" style="margin-left: 20px">for x in range(10):<br />	print “Hello!”</pre></p>
			<p>The code <span class="code-text">print "Hello!"</span> will loop 10 times, printing the word Hello! that many times. You can put more information inside the loop and control how many times the code is run inside the loop. Indent each line of code that you would want to loop (see how the code print “Hello!” is indented in the example above). For this module, consider how you would change the code from Module 1 and cause your LED light to blink.</p>
			<p>An important built-in Python function is the <b>"Time"</b> function. Inorder to used this function we will need to import it into our project by using the code:</p>
			<p><pre class="image-300" style="margin-left: 20px">import time as Time</pre></p>
			<p>Now we can use the function <span class="code-text">Time.sleep(<span class="code">number</span>)</span> in the folowing example:</p>
			<p><pre class="image-300" style="margin-left: 20px">Time.sleep(<span class="code">number</span>)</pre></p>
			<p>This command tells the computer how long, in seconds, to delay the execution of your next line of code. The line of code right before this command will keep running until then.</p>
			<p><b>Example:</b> The code below keeps the LED light connected to GPIO Pin 11 on for 3 second.  After the 3 seconds it execute the last line and turns off the light.</p>
			<p><pre class="image-300" style="margin-left: 20px">GPIO.output(11, GPIO.HIGH)<br />Time.sleep(3)<br />GPIO.output(11, GPIO.LOW)</pre></p>
		</div>
	</div>
</div>
<br>
<br>
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
			<h1 class='lesson-title center gray'>Learning Opportunity</h1>
			<p>If you change the syntax from the example in the Lesson & Syntax section to:</p>
			<p><pre class="image-300" style="margin-left: 20px">for x in range(5):<br />	print “Hello!”</pre></p>
			<p>Your result will be:</p>
			<p><pre class="image-300" style="margin-left: 20px">Hello<br />Hello<br />Hello<br />Hello<br />Hello<br /></pre></p>
			<p>This is a loop that will repeat as many times as you specify between the parentheses. In this case, the loop repeats 5 times.</p>
		</div>
	</div>
</div>

<br>
<br>
<br>

<!-- Excercises -->
<div class="custom-container gray">
	<h1>Excercises</h1>
</div>


<!-- Excercise 1 -->
<div class="custom-container gray">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 1: Have an LED light blink five times</h2>
			<p>1. Set up the breadboard the same as Module 1, Exercise 2. The diagram is shown below:</p>
			<div><div><%= image_tag "gpio3.png", class: "pop-img" %></div></div>
			<p>2. Open ‘Module2’ folder and open python file <code>ex2_1.py</code></p>
			<p>3. Follow the directions in the python file. Note: you will need to use <span class="code-text">Time.sleep(<span class="code">number</span>)</span> function in it.</p>
			<p>4. Save and run the python file. The LED light should blink 5 times.</p>
		</div>
	</div>
</div>


<br>
<br>

<!-- Exercise 2-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 2: Have one LED light blink quickly first, and one LED light blink slowly after.</h2>
			<p>1. Set up the breadboard the same way as Module 1, Exercise 3. You will need to use GPIO 11 and GPIO 13.</p>
			<div><div><%= image_tag "gpio4.png", class: "pop-img" %></div></div>
			<p>2. Open python file <code>ex2_2.py</code></p>
			<p>3. Follow the directions in the python file. Note to use two for loops. Refer to the Module 2 Lesson & Syntax for the syntax to create the for loops. Use the <span class="code-text">Time.sleep(<span class="code">number</span>)</span> command as you did before. </p>
			<p>4. Save and run the python file. One LED light should blink 5 times, followed by the second LED light, which will also blink 5 times. One of the LED lights should blink faster than the other.</p>
		</div>
	</div>
</div>

<br>
<br>

<!-- Exercise 3-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 3: Have one LED light blink quickly and one LED light blink slowly simultaneously.</h2>
			<p>1. Leave the breadboard as is from Module 2, Exercise 2</p>
			<p>2. Open python file <code>ex2_3.py</code></p>
			<p>3. Follow the directions in red. Note to use one for loop this time and use the <span class="code-text">Time.sleep(<span class="code">number</span>)</span> command as you did before.</p>
			<p>4. Save and run the python file. Both LED lights should start blinking at the same time (5 times total), but one should blink faster than the other.</p>
		</div>
	</div>
</div>

<br>
<br>
<br>
<!-- END of Excercises -->


<!-- Final -->
<div class="custom-container">
	<div class="primary-lesson-box final-box">
		<div class="gray">
		<h1 class='lesson-title center gray'>Time to celebrate.</h1>
		<p><i class="fa fa-hand-peace-o" aria-hidden="true"></i> Pat yourself on the back, give a classmate a high five!</p>
		<p><i class="fa fa-hand-paper-o" aria-hidden="true"></i> Check with the instructor you're good to proceed.</p>
		</div>
		<div class="center">
			<div class="final-btn">
				<%= link_to "< Back to Module 1", lesson_fundamental_gpio_path, class:"custom-btn btn-second-invert" %>
			</div>
			<div class="final-btn">
				<%= link_to "Go to Module 3 >", lesson_fundamental_comparison_path, class:"custom-btn btn-second-invert"%>
			</div>
		</div>
	</div>
</div>

<br>
<br>

<!-- JavaScript for popup images -->
<script type="text/javascript">
$(function() {
	$('.pop-img').on('click', function() {
		$('.enlargeImageModalSource').attr('src', $(this).attr('src'));
		$('#enlargeImageModal').modal('show');
	});
});
</script>

