<!-- Bread Crumb -->
<ul class="breadcrumb">
  <li><%= link_to "Home", root_path %></li>
  <li>Lessons</li>
  <li><%= link_to "Robot Car", lesson_robot_car_path%></li>
  <li>Module 1 - H Bridge</li>
</ul>
<!-- End of Bread Crumb -->


<!-- Title -->
<div class="container gray">
	<div class="center">
		<h1>MOTOR CONTROL USING H-BRIDGE</h1>
	</div>
</div>
<!-- End of Title -->

<br>
<br>

<!-- Modules -->
<div class="custom-container">
	<div class="third-lesson-box">
		<div class="white">
		<h2 class='lesson-title white'>Learning Goal</h2>
		<p><span></span>Understand the functionality of motors and how they are controlled by the H-Bridge</p>
		</div>
	</div>
</div>

<br>
<br>

<div class="custom-container gray">
	<h2>OVERVIEW</h2>
	<div class="row">
	  <div class="col-md-4">
	  <%= link_to image_tag "hbridge.png", class:"image-300" %>

	  </div>
	  <div class="col-md-8">
	  	<div class="concept">
	  		
	  	<h4 class="gray center">
	  		<span></span>KEY CONCEPTS</h4>
				<div class="row">
					<div class="col-sm-4 center">
						Truth Table
					</div>
					<div class="col-sm-4 center">
						H-Bridge
					</div>
					<div class="col-sm-4 center">
						Eletric Polarity
					</div>
	  		</div>
	  	</div>
	  		<p>In this project, we will be using <span class="color-primary"><b>DC motors</b></span>. Each motor is made up of a number of inductors, which move in a magnetic field. For our purposes, the function of the motors is to convert electrical energy into mechanical energy. The mechanical energy translates to the rotation of the wheels in your robot car. The speed of the rotation is proportional to the amount of current flowing through them, and in this project, we’ll be keeping the current constant, so the car would only be able to travel at a single speed.</p>
	  		<p>When a DC motor is hooked up to (+) wire on one lead and (-) wire on the other lead, the motor rotates a certain direction. When you switch the wires, the motor rotates in the opposite direction. In order to control the switching of “electric polarity” so the car is capable of moving forward and backward, the motors need to be connected to a motor controller called the H-Bridge.</p>
	  		<p>The H-Bridge acts as the interface between the motors and your Raspberry Pi. It has four inputs (I1, I2, I3, and I4) and four outputs (O1, O2, O3, and O4). The inputs will connect to the Raspberry Pi GPIO pins, which the user can designate as True or False. The output ports will take in the motor leads, and send power to the motor as controlled by the<span class="color-primary"><b> GPIO Pins</b></span>.</p>
	  		<p><b>In this module, we will connect the motor, H-Bridge, and Raspberry Pi&trade; to correspond to the following <span class="color-third"><b> truth table</b></span>.</p>
	  		<div class="center">
					<div class="btn btn-primary">Open Truth Table</div>
	  		</div>
			</div>
		</div>
	</div>
</div>


<br>
<br>

<!-- Carousel -->

<div class="custom-container gray">
	<h2>Setup</h2>
	<div id="myCarousel" class="carousel slide" data-ride="carousel">
  <!-- Indicators -->
	  <ol class="carousel-indicators">
	    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
	    <li data-target="#myCarousel" data-slide-to="1"></li>
	    <li data-target="#myCarousel" data-slide-to="2"></li>
	  </ol>

	  <!-- Wrapper for slides -->
	  <div class="carousel-inner">
	    <div class="item active">
	      <%= link_to image_tag("300.png")%>
	    </div>

	    <div class="item">
	      <%= link_to image_tag("300.png")%>
	    </div>

	    <div class="item">
	      <%= link_to image_tag("300.png")%>
	    </div>
	  </div>

	  <!-- Left and right controls -->
	  <a class="left carousel-control" href="#myCarousel" data-slide="prev">
	    <span class="glyphicon glyphicon-chevron-left"></span>
	    <span class="sr-only">Previous</span>
	  </a>
	  <a class="right carousel-control" href="#myCarousel" data-slide="next">
	    <span class="glyphicon glyphicon-chevron-right"></span>
	    <span class="sr-only">Next</span>
	  </a>
	</div>
</div>

<br>
<br>
<br>


<!-- Lesson Box -->
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
		<h1 class='lesson-title center gray'>Before starting the excercises</h1>
		<p><i class="fa fa-cogs" aria-hidden="true"></i> Make sure to connect your wheel</p>
		<p><i class="fa fa-hdd-o" aria-hidden="true"></i> Check the Robot Car Python excercise files copied into your RaspberryPi&trade; MicroSD Card</p>
		</div>
	</div>
</div>

<br>
<br>

<!-- Setup -->

<div class="custom-container gray">
	<h1>Setup</h1>
</div>


<div class="custom-container gray">
	<div class="forth-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Step 1: Labeling</h2>
			<p>Labe each moter to keep orginized for later steps.</p>
			<div><%= image_tag ("label_motor.png") %></div>
		</div>
	</div>
</div>
<!-- End of setup -->

<br>
<br>

<!-- Lesson Box Prime-->
<div class="custom-container gray">
	<h1>Excercises</h1>
</div>

<div class="custom-container gray">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Excercise 1: Control Motor to spin wheel clockwise</h2>
			<p>1. Connect the Raspberry Pi&trade; to the external battery.</p>
			<p>2. Use VNC Viewer to SSH into your Raspberry Pi&trade; and access the terminal.</p>
			<p>3. Open file motor_ex1.py by using the command sudo nano motor_ex1.py</p>
			<p>4. Set the outputs for each GPIO pin by following the directions in the file in red. Refer to the truth table in the lesson above (the first row) to turn the wheel clockwise. For a refresher on how to set your GPIO pins True or False, refer to Module 1 of the Base Curriculum. Check with the instructor at this step.</p>
			<p>5. Save and execute your python code. Your wheel should spin clockwise for 5 seconds.</p>
		</div>
	</div>
</div>


<br>
<br>

<!-- Lesson Box Prime-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 2: Control motor to spin wheel counter-clockwise.</h2>
			<p>1. Open file motor_ex2.py by using the command sudo nano motor_ex2.py</p>
			<p>2. Set the outputs for each GPIO pin by following the directions in the file in red. Refer to the truth table above, specifically the first two rows.</p>
			<p>3. Save and execute your python code. Your wheel should spin counter-clockwise for 5 seconds.</p>
		</div>
	</div>
</div>

<br>
<br>

<!-- Lesson Box Prime-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 3: Control motor to spin wheel clockwise, and then counter-clockwise.</h2>
			<p>1. Open file motor_ex3.py by using the command sudo nano motor_ex3.py</p>
			<p>2. Set the outputs for each GPIO pin by following the directions in the file in red. Refer to the truth table above. Remember to use the time.sleep() function at the end of each GPIO pin set.</p>
			<p>3. Save and execute your python code. Your wheel should spin clockwise for 5 seconds and then counter-clockwise for 5 seconds.</p>
		</div>
	</div>
</div>

<br>
<br>


<!-- Lesson Box -->
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
		<h1 class='lesson-title center gray'>Before going to the next module:</h1>
		<p><i class="fa fa-hand-peace-o" aria-hidden="true"></i> Pat yourself on the back, give a classmate a high five!</p>
		<p><i class="fa fa-hand-paper-o" aria-hidden="true"></i> Check with the instructor you're good to proceed.</p>
		</div>
		<div class="center">
			<div class="btn btn-primary">Go to module 2</div></p>
		</div>
	</div>
</div>

<br>
<br>


