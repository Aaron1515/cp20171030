<!-- Pop up image modal template -->
<div class="modal fade" id="enlargeImageModal" tabindex="-1" role="dialog" aria-labelledby="enlargeImageModal" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header" style="border: none;">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
      </div>
      <div class="modal-body">
        <img src="" class="enlargeImageModalSource" style="width: 100%;">
      </div>
    </div>
  </div>
</div>
<!-- End of image pop up modal -->


<!-- Bread Crumb -->
<div class="sticky">
	<ul class="breadcrumb" id="breadcrumb">
	  <li><%= link_to "Home", root_path %></li>
	  <li>Lessons</li>
	  <li><%= link_to "Fundamentals", lesson_fundamental_path%></li>
	  <li>Module 1 - GPIO</li>
	</ul>
</div>
<!-- End of Bread Crumb -->


<!-- Title -->
<div class="container gray">
	<div class="center">
		<h1>GPIO (General-Purpose Input/Output)</h1>
	</div>
</div>
<!-- End of Title -->

<br>
<br>
<br>

<!-- Learning Goals -->
<div class="custom-container">
	<div class="third-lesson-box">
		<div class="white">
			<h2 class='lesson-title white'>Learning Goal</h2>
			<p>
				<ul>
					<li>Understand the general functionality of GPIO pins on the Raspberry Pi&trade;</li>
					<li>Understand the different types of GPIO pins (general, ground, 3.3V, 5V, etc.)</li>
					<li>Learn Python syntax for controlling individual GPIO pins</li>
				</ul>
			</p>
		</div>
	</div>
</div>
<!-- End of Learning Goals -->

<br>
<br>
<br>
<br>
<br>

<!-- Lesson & Syntax -->
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
			<h1 class='lesson-title center gray'>Lesson & Syntax</h1>
			<p>The syntax for setting up the output for GPIO pins is:</p>
			<p><pre class="image-300" style="margin-left: 20px">GPIO.output(<span class="code">Pin Number</span>, <span class="code">Pin State</span>)</pre></p>
			<br>

			<p><b>Example:</b> Set pin number 11 to on. All three lines of code are equivalent in functionality.</p>
			<p><pre class="image-300" style="margin-left: 20px">GPIO.output(11, GPIO.HIGH) <br />GPIO.output(11, True)<br /> GPIO.output(11, 1)</pre></p>
			<br>

			<p><b>Example:</b> Set pin number 11 to off. All three lines of code are equivalent in functionality.</p>
			<p><pre class="image-300" style="margin-left: 20px">GPIO.output(11, GPIO.LOW) <br />GPIO.output(11, False) <br />GPIO.output(11, 0</pre>
			</p>
			<br>
			<p>LED lights have a positive and a negative terminal, which is represented by a longer leg and a shorter leg as shown in the diagram below: </p>
			<div class="center">
				<%= image_tag "led.png", class:"image-300 pop-img" %>
			</div>
			<p>The positive long leg should be connected to the power source, while the negative short leg should be connected to ground. This is because electric current flows from the positive to the negative terminal.</p>
		</div>
	</div>
</div>
<br>
<br>
<div class="custom-container">
	<div class="primary-lesson-box">
		<div class="gray">
			<h1 class='lesson-title center gray'>Learning Opportunity</h1>
			<p><b>Why does the LED light have a shorter leg and a longer leg?</b><br />The longer terminal on the LED indicates that it is the positive (+) terminal and the shorter leg is the negative (-) terminal.</p>
			<p><b>What is a variable?</b><br />Variable are stored data.  Variable could be number(s) or string(s).</p>
			<p><b>What is a functioin?</b><br />Functions are stored scripts that could be reused.  You might hear the word "method" from other programming language that refer to as functions.</p>
		</div>
	</div>
</div>
<!-- End of Lesson & Syntax -->f

<br>
<br>
<br>

<!-- Excercises -->
<div class="custom-container gray">
	<h1>Excercises</h1>
</div>


<!-- Excercise 1 -->
<div class="custom-container gray">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 1: Turn LED light on with GPIO pin 2 (constant 5.0V)</h2>
			<p>1. Identify the GPIO pins that you need. You will need GPIO Pin 2, which gives out a constant 5V, and GPIO Pin 6, which is ground. Add a female-to-male wire to each pin.</p>
			<div><div><%= image_tag ("gpio1.png"), class: "pop-img" %></div></div>
			<p>2. Plug in the male end of the wires to bread board. Set up LED light and resistor (220 ohms) on bread board as the diagram shows below. The LED light should light up once the circuit is complete.</p>
			<div><div><%= image_tag ("gpio2.png"), class: "pop-img" %></div></div></div>
			<br>
		</div>
	</div>
</div>


<br>
<br>

<!-- Exercise 2-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 2: Turn LED light on with GPIO pin 11</h2>
			<p>1. Open the ‘Fundamentals’ folder, and then open the ‘Module1’ folder.</p>
			<p>2. Open python file <code>ex1_2.py</code> in the ‘Module1’ folder.</p>
			<p>3. Set up breadboard the same way as Exercise 1, except move male-to-female wire from GPIO Pin 2 to GPIO Pin 11.</p>
			<div><div><%= image_tag ("gpio3.png"), class: "pop-img" %></div></div>
			<p>4. Read directions in the python file and complete the exercise. Refer to the Module 1 Lesson & Syntax section to know what syntax to use.</p>
			<p>5. Save and run the python file. The LED light should turn on for 5 seconds.</p>
			<p>6. Look at the GPIO pin layout diagram. Do you think you can use a different GPIO pin? If you think you can, adjust the wiring and your code and see if you can still turn on the light.</p>
		</div>
	</div>
</div>

<br>
<br>

<!-- Exercise 3-->
<div class="custom-container">
	<div class="second-lesson-box">
		<div class="gray">
			<h2 class='lesson-title gray'>Exercise 3: Turn one LED light on and one LED light off with different GPIO Pins, using GPIO Pin 11 and GPIO Pin 13. </h2>
			<p>1. Set up breadboard the same way as in Module 1 Exercise 2. Then add another resistor and LED light to the breadboard. Then add another male-to-female wire from GPIO Pin 13 to the second LED light. The circuit should look like the diagram shown below. Note: Use the same ground for both resistors.</p>
			<div><div><%= image_tag ("gpio4.png"), class: "pop-img" %></div></div>
			<p>2. Open python file <code>ex1_3.py</code></p>
			<p>3. Read directions in the python file and complete the exercise. Refer to the Module 1 Lesson & Syntax to know what syntax to use.</p>
			<p>4. Save and run the python file. The first LED light (connected to GPIO Pin 11) should turn on for 5 seconds, while the second LED light (connected to GPIO Pin 13) should be off.</p>
			<p>5. Now open python file <code>ex1_3.py</code> again and change the code such that the second LED light connected to GPIO Pin 13 is on, and the first LED light connected to GPIO Pin 11 is off, and execute your code. This time, the second LED light should turn on for 5 seconds while the first LED light is off.</p>
		</div>
	</div>
</div>

<br>
<br>


<br>
<br>


<!-- Excecise 3 -->
<div class="custom-container">
	<div class="primary-lesson-box final-box">
		<div class="gray">
		<h1 class='lesson-title center gray'>Time to celebrate.</h1>
		<p><i class="fa fa-hand-peace-o" aria-hidden="true"></i> Pat yourself on the back, give a classmate a high five!</p>
		<p><i class="fa fa-hand-paper-o" aria-hidden="true"></i> Check with the instructor you're good to proceed.</p>
		</div>

		<!-- buttons for next course -->
		<div class="center">
			<div class="final-btn">
				<%= link_to "< Back to Fundamentalsg", lesson_fundamental_path, class:"custom-btn btn-second-invert" %>
			</div>
			<div class="final-btn">
				<%= link_to "Go to module 3 >", lesson_fundamental_loops_path, class:"custom-btn btn-second-invert"%>
			</div>
		</div><!-- end of buttons -->
	</div>
</div>

<br>
<br>


<!-- JavaScript for popup images -->
<script type="text/javascript">
$(function() {
	$('.pop-img').on('click', function() {
		$('.enlargeImageModalSource').attr('src', $(this).attr('src'));
		$('#enlargeImageModal').modal('show');
	});
});
</script>

